/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/MouseAirWaysImage.glb -t 
*/

import * as THREE from "three";
import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Group, Mesh, MeshStandardMaterial } from "three";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    MouseAirwayCast: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

export default function Model2(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("./MouseAirWaysImage.glb") as GLTFResult;

  const modelRef = useRef<Group | null>(null);
  
  modelRef.current?.rotateY(Math.PI/4)

  useFrame(() => {
    if (modelRef.current) {
      modelRef.current.position.set(0, 0.5, 0);
      modelRef.current.rotateY(0.004);
    }
  });

  return (
    <group {...props} dispose={null} ref={modelRef}>
      <mesh
        geometry={nodes.MouseAirwayCast.geometry}
        material={materials["Material.001"]}
      />
    </group>
  );
}

useGLTF.preload("./MouseAirWaysImage.glb");
